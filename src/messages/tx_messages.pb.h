// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tx_messages.proto

#ifndef PROTOBUF_tx_5fmessages_2eproto__INCLUDED
#define PROTOBUF_tx_5fmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "rpc_messages.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_tx_5fmessages_2eproto();
void protobuf_AssignDesc_tx_5fmessages_2eproto();
void protobuf_ShutdownFile_tx_5fmessages_2eproto();

class PbRpcTxPublicGetServerConfigResult;
class PbRpcPublicStartArg;
class PbRpcPublicStartResult;
class PbRpcPublicReadArg;
class PbRpcPublicReadResult;
class PbRpcPublicCommitArg;
class PbRpcPublicCommitResult;
class PbRpcPublicGetRemotePartitionsIdsResult;
class PbRpcInternalTxSliceReadKeysArg;
class PbRpcInternalTxSliceReadKeysResult;
class PbRpcPrepareRequestArg;
class PbRpcPrepareRequestResult;
class PbRpcInternalPrepareReplyResult;
class PbRpcGST;
class PbRpcLST;
class PbRpcGSTandUST;

// ===================================================================

class PbRpcTxPublicGetServerConfigResult : public ::google::protobuf::Message {
 public:
  PbRpcTxPublicGetServerConfigResult();
  virtual ~PbRpcTxPublicGetServerConfigResult();

  PbRpcTxPublicGetServerConfigResult(const PbRpcTxPublicGetServerConfigResult& from);

  inline PbRpcTxPublicGetServerConfigResult& operator=(const PbRpcTxPublicGetServerConfigResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcTxPublicGetServerConfigResult& default_instance();

  void Swap(PbRpcTxPublicGetServerConfigResult* other);

  // implements Message ----------------------------------------------

  PbRpcTxPublicGetServerConfigResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcTxPublicGetServerConfigResult& from);
  void MergeFrom(const PbRpcTxPublicGetServerConfigResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool Succeeded = 1;
  inline bool has_succeeded() const;
  inline void clear_succeeded();
  static const int kSucceededFieldNumber = 1;
  inline bool succeeded() const;
  inline void set_succeeded(bool value);

  // required int32 NumPartitions = 2;
  inline bool has_numpartitions() const;
  inline void clear_numpartitions();
  static const int kNumPartitionsFieldNumber = 2;
  inline ::google::protobuf::int32 numpartitions() const;
  inline void set_numpartitions(::google::protobuf::int32 value);

  // required int32 NumDataCenters = 3;
  inline bool has_numdatacenters() const;
  inline void clear_numdatacenters();
  static const int kNumDataCentersFieldNumber = 3;
  inline ::google::protobuf::int32 numdatacenters() const;
  inline void set_numdatacenters(::google::protobuf::int32 value);

  // required int32 PartitionReplicationFactor = 4;
  inline bool has_partitionreplicationfactor() const;
  inline void clear_partitionreplicationfactor();
  static const int kPartitionReplicationFactorFieldNumber = 4;
  inline ::google::protobuf::int32 partitionreplicationfactor() const;
  inline void set_partitionreplicationfactor(::google::protobuf::int32 value);

  // required int32 replicaId = 5;
  inline bool has_replicaid() const;
  inline void clear_replicaid();
  static const int kReplicaIdFieldNumber = 5;
  inline ::google::protobuf::int32 replicaid() const;
  inline void set_replicaid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PbRpcTxPublicGetServerConfigResult)
 private:
  inline void set_has_succeeded();
  inline void clear_has_succeeded();
  inline void set_has_numpartitions();
  inline void clear_has_numpartitions();
  inline void set_has_numdatacenters();
  inline void clear_has_numdatacenters();
  inline void set_has_partitionreplicationfactor();
  inline void clear_has_partitionreplicationfactor();
  inline void set_has_replicaid();
  inline void clear_has_replicaid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool succeeded_;
  ::google::protobuf::int32 numpartitions_;
  ::google::protobuf::int32 numdatacenters_;
  ::google::protobuf::int32 partitionreplicationfactor_;
  ::google::protobuf::int32 replicaid_;
  friend void  protobuf_AddDesc_tx_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tx_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tx_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcTxPublicGetServerConfigResult* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcPublicStartArg : public ::google::protobuf::Message {
 public:
  PbRpcPublicStartArg();
  virtual ~PbRpcPublicStartArg();

  PbRpcPublicStartArg(const PbRpcPublicStartArg& from);

  inline PbRpcPublicStartArg& operator=(const PbRpcPublicStartArg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcPublicStartArg& default_instance();

  void Swap(PbRpcPublicStartArg* other);

  // implements Message ----------------------------------------------

  PbRpcPublicStartArg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcPublicStartArg& from);
  void MergeFrom(const PbRpcPublicStartArg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PbPhysicalTimeSpec UST = 1;
  inline bool has_ust() const;
  inline void clear_ust();
  static const int kUSTFieldNumber = 1;
  inline const ::PbPhysicalTimeSpec& ust() const;
  inline ::PbPhysicalTimeSpec* mutable_ust();
  inline ::PbPhysicalTimeSpec* release_ust();
  inline void set_allocated_ust(::PbPhysicalTimeSpec* ust);

  // @@protoc_insertion_point(class_scope:PbRpcPublicStartArg)
 private:
  inline void set_has_ust();
  inline void clear_has_ust();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::PbPhysicalTimeSpec* ust_;
  friend void  protobuf_AddDesc_tx_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tx_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tx_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcPublicStartArg* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcPublicStartResult : public ::google::protobuf::Message {
 public:
  PbRpcPublicStartResult();
  virtual ~PbRpcPublicStartResult();

  PbRpcPublicStartResult(const PbRpcPublicStartResult& from);

  inline PbRpcPublicStartResult& operator=(const PbRpcPublicStartResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcPublicStartResult& default_instance();

  void Swap(PbRpcPublicStartResult* other);

  // implements Message ----------------------------------------------

  PbRpcPublicStartResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcPublicStartResult& from);
  void MergeFrom(const PbRpcPublicStartResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool Succeeded = 1;
  inline bool has_succeeded() const;
  inline void clear_succeeded();
  static const int kSucceededFieldNumber = 1;
  inline bool succeeded() const;
  inline void set_succeeded(bool value);

  // required int64 ID = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional .PbPhysicalTimeSpec UST = 3;
  inline bool has_ust() const;
  inline void clear_ust();
  static const int kUSTFieldNumber = 3;
  inline const ::PbPhysicalTimeSpec& ust() const;
  inline ::PbPhysicalTimeSpec* mutable_ust();
  inline ::PbPhysicalTimeSpec* release_ust();
  inline void set_allocated_ust(::PbPhysicalTimeSpec* ust);

  // @@protoc_insertion_point(class_scope:PbRpcPublicStartResult)
 private:
  inline void set_has_succeeded();
  inline void clear_has_succeeded();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_ust();
  inline void clear_has_ust();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::PbPhysicalTimeSpec* ust_;
  bool succeeded_;
  friend void  protobuf_AddDesc_tx_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tx_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tx_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcPublicStartResult* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcPublicReadArg : public ::google::protobuf::Message {
 public:
  PbRpcPublicReadArg();
  virtual ~PbRpcPublicReadArg();

  PbRpcPublicReadArg(const PbRpcPublicReadArg& from);

  inline PbRpcPublicReadArg& operator=(const PbRpcPublicReadArg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcPublicReadArg& default_instance();

  void Swap(PbRpcPublicReadArg* other);

  // implements Message ----------------------------------------------

  PbRpcPublicReadArg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcPublicReadArg& from);
  void MergeFrom(const PbRpcPublicReadArg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // repeated bytes Key = 2;
  inline int key_size() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline const ::std::string& key(int index) const;
  inline ::std::string* mutable_key(int index);
  inline void set_key(int index, const ::std::string& value);
  inline void set_key(int index, const char* value);
  inline void set_key(int index, const void* value, size_t size);
  inline ::std::string* add_key();
  inline void add_key(const ::std::string& value);
  inline void add_key(const char* value);
  inline void add_key(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& key() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_key();

  // optional bool noTxId = 3;
  inline bool has_notxid() const;
  inline void clear_notxid();
  static const int kNoTxIdFieldNumber = 3;
  inline bool notxid() const;
  inline void set_notxid(bool value);

  // @@protoc_insertion_point(class_scope:PbRpcPublicReadArg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_notxid();
  inline void clear_has_notxid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> key_;
  bool notxid_;
  friend void  protobuf_AddDesc_tx_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tx_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tx_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcPublicReadArg* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcPublicReadResult : public ::google::protobuf::Message {
 public:
  PbRpcPublicReadResult();
  virtual ~PbRpcPublicReadResult();

  PbRpcPublicReadResult(const PbRpcPublicReadResult& from);

  inline PbRpcPublicReadResult& operator=(const PbRpcPublicReadResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcPublicReadResult& default_instance();

  void Swap(PbRpcPublicReadResult* other);

  // implements Message ----------------------------------------------

  PbRpcPublicReadResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcPublicReadResult& from);
  void MergeFrom(const PbRpcPublicReadResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool Succeeded = 1;
  inline bool has_succeeded() const;
  inline void clear_succeeded();
  static const int kSucceededFieldNumber = 1;
  inline bool succeeded() const;
  inline void set_succeeded(bool value);

  // repeated bytes Value = 2;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value(int index) const;
  inline ::std::string* mutable_value(int index);
  inline void set_value(int index, const ::std::string& value);
  inline void set_value(int index, const char* value);
  inline void set_value(int index, const void* value, size_t size);
  inline ::std::string* add_value();
  inline void add_value(const ::std::string& value);
  inline void add_value(const char* value);
  inline void add_value(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& value() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_value();

  // optional int64 ID = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 3;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PbRpcPublicReadResult)
 private:
  inline void set_has_succeeded();
  inline void clear_has_succeeded();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> value_;
  ::google::protobuf::int64 id_;
  bool succeeded_;
  friend void  protobuf_AddDesc_tx_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tx_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tx_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcPublicReadResult* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcPublicCommitArg : public ::google::protobuf::Message {
 public:
  PbRpcPublicCommitArg();
  virtual ~PbRpcPublicCommitArg();

  PbRpcPublicCommitArg(const PbRpcPublicCommitArg& from);

  inline PbRpcPublicCommitArg& operator=(const PbRpcPublicCommitArg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcPublicCommitArg& default_instance();

  void Swap(PbRpcPublicCommitArg* other);

  // implements Message ----------------------------------------------

  PbRpcPublicCommitArg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcPublicCommitArg& from);
  void MergeFrom(const PbRpcPublicCommitArg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 ID = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIDFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // repeated bytes Key = 2;
  inline int key_size() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline const ::std::string& key(int index) const;
  inline ::std::string* mutable_key(int index);
  inline void set_key(int index, const ::std::string& value);
  inline void set_key(int index, const char* value);
  inline void set_key(int index, const void* value, size_t size);
  inline ::std::string* add_key();
  inline void add_key(const ::std::string& value);
  inline void add_key(const char* value);
  inline void add_key(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& key() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_key();

  // repeated bytes Value = 3;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline const ::std::string& value(int index) const;
  inline ::std::string* mutable_value(int index);
  inline void set_value(int index, const ::std::string& value);
  inline void set_value(int index, const char* value);
  inline void set_value(int index, const void* value, size_t size);
  inline ::std::string* add_value();
  inline void add_value(const ::std::string& value);
  inline void add_value(const char* value);
  inline void add_value(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& value() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_value();

  // optional .PbPhysicalTimeSpec LCT = 4;
  inline bool has_lct() const;
  inline void clear_lct();
  static const int kLCTFieldNumber = 4;
  inline const ::PbPhysicalTimeSpec& lct() const;
  inline ::PbPhysicalTimeSpec* mutable_lct();
  inline ::PbPhysicalTimeSpec* release_lct();
  inline void set_allocated_lct(::PbPhysicalTimeSpec* lct);

  // @@protoc_insertion_point(class_scope:PbRpcPublicCommitArg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_lct();
  inline void clear_has_lct();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> key_;
  ::google::protobuf::RepeatedPtrField< ::std::string> value_;
  ::PbPhysicalTimeSpec* lct_;
  friend void  protobuf_AddDesc_tx_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tx_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tx_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcPublicCommitArg* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcPublicCommitResult : public ::google::protobuf::Message {
 public:
  PbRpcPublicCommitResult();
  virtual ~PbRpcPublicCommitResult();

  PbRpcPublicCommitResult(const PbRpcPublicCommitResult& from);

  inline PbRpcPublicCommitResult& operator=(const PbRpcPublicCommitResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcPublicCommitResult& default_instance();

  void Swap(PbRpcPublicCommitResult* other);

  // implements Message ----------------------------------------------

  PbRpcPublicCommitResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcPublicCommitResult& from);
  void MergeFrom(const PbRpcPublicCommitResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool Succeeded = 1;
  inline bool has_succeeded() const;
  inline void clear_succeeded();
  static const int kSucceededFieldNumber = 1;
  inline bool succeeded() const;
  inline void set_succeeded(bool value);

  // required .PbPhysicalTimeSpec CT = 2;
  inline bool has_ct() const;
  inline void clear_ct();
  static const int kCTFieldNumber = 2;
  inline const ::PbPhysicalTimeSpec& ct() const;
  inline ::PbPhysicalTimeSpec* mutable_ct();
  inline ::PbPhysicalTimeSpec* release_ct();
  inline void set_allocated_ct(::PbPhysicalTimeSpec* ct);

  // @@protoc_insertion_point(class_scope:PbRpcPublicCommitResult)
 private:
  inline void set_has_succeeded();
  inline void clear_has_succeeded();
  inline void set_has_ct();
  inline void clear_has_ct();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::PbPhysicalTimeSpec* ct_;
  bool succeeded_;
  friend void  protobuf_AddDesc_tx_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tx_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tx_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcPublicCommitResult* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcPublicGetRemotePartitionsIdsResult : public ::google::protobuf::Message {
 public:
  PbRpcPublicGetRemotePartitionsIdsResult();
  virtual ~PbRpcPublicGetRemotePartitionsIdsResult();

  PbRpcPublicGetRemotePartitionsIdsResult(const PbRpcPublicGetRemotePartitionsIdsResult& from);

  inline PbRpcPublicGetRemotePartitionsIdsResult& operator=(const PbRpcPublicGetRemotePartitionsIdsResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcPublicGetRemotePartitionsIdsResult& default_instance();

  void Swap(PbRpcPublicGetRemotePartitionsIdsResult* other);

  // implements Message ----------------------------------------------

  PbRpcPublicGetRemotePartitionsIdsResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcPublicGetRemotePartitionsIdsResult& from);
  void MergeFrom(const PbRpcPublicGetRemotePartitionsIdsResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool Succeeded = 1;
  inline bool has_succeeded() const;
  inline void clear_succeeded();
  static const int kSucceededFieldNumber = 1;
  inline bool succeeded() const;
  inline void set_succeeded(bool value);

  // repeated int64 pids = 2;
  inline int pids_size() const;
  inline void clear_pids();
  static const int kPidsFieldNumber = 2;
  inline ::google::protobuf::int64 pids(int index) const;
  inline void set_pids(int index, ::google::protobuf::int64 value);
  inline void add_pids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      pids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_pids();

  // @@protoc_insertion_point(class_scope:PbRpcPublicGetRemotePartitionsIdsResult)
 private:
  inline void set_has_succeeded();
  inline void clear_has_succeeded();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > pids_;
  bool succeeded_;
  friend void  protobuf_AddDesc_tx_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tx_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tx_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcPublicGetRemotePartitionsIdsResult* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcInternalTxSliceReadKeysArg : public ::google::protobuf::Message {
 public:
  PbRpcInternalTxSliceReadKeysArg();
  virtual ~PbRpcInternalTxSliceReadKeysArg();

  PbRpcInternalTxSliceReadKeysArg(const PbRpcInternalTxSliceReadKeysArg& from);

  inline PbRpcInternalTxSliceReadKeysArg& operator=(const PbRpcInternalTxSliceReadKeysArg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcInternalTxSliceReadKeysArg& default_instance();

  void Swap(PbRpcInternalTxSliceReadKeysArg* other);

  // implements Message ----------------------------------------------

  PbRpcInternalTxSliceReadKeysArg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcInternalTxSliceReadKeysArg& from);
  void MergeFrom(const PbRpcInternalTxSliceReadKeysArg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes Key = 1;
  inline int key_size() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key(int index) const;
  inline ::std::string* mutable_key(int index);
  inline void set_key(int index, const ::std::string& value);
  inline void set_key(int index, const char* value);
  inline void set_key(int index, const void* value, size_t size);
  inline ::std::string* add_key();
  inline void add_key(const ::std::string& value);
  inline void add_key(const char* value);
  inline void add_key(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& key() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_key();

  // optional .PbPhysicalTimeSpec UST = 2;
  inline bool has_ust() const;
  inline void clear_ust();
  static const int kUSTFieldNumber = 2;
  inline const ::PbPhysicalTimeSpec& ust() const;
  inline ::PbPhysicalTimeSpec* mutable_ust();
  inline ::PbPhysicalTimeSpec* release_ust();
  inline void set_allocated_ust(::PbPhysicalTimeSpec* ust);

  // optional int64 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int64 srcPartition = 4;
  inline bool has_srcpartition() const;
  inline void clear_srcpartition();
  static const int kSrcPartitionFieldNumber = 4;
  inline ::google::protobuf::int64 srcpartition() const;
  inline void set_srcpartition(::google::protobuf::int64 value);

  // optional int64 srcDataCenter = 5;
  inline bool has_srcdatacenter() const;
  inline void clear_srcdatacenter();
  static const int kSrcDataCenterFieldNumber = 5;
  inline ::google::protobuf::int64 srcdatacenter() const;
  inline void set_srcdatacenter(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PbRpcInternalTxSliceReadKeysArg)
 private:
  inline void set_has_ust();
  inline void clear_has_ust();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_srcpartition();
  inline void clear_has_srcpartition();
  inline void set_has_srcdatacenter();
  inline void clear_has_srcdatacenter();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> key_;
  ::PbPhysicalTimeSpec* ust_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 srcpartition_;
  ::google::protobuf::int64 srcdatacenter_;
  friend void  protobuf_AddDesc_tx_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tx_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tx_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcInternalTxSliceReadKeysArg* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcInternalTxSliceReadKeysResult : public ::google::protobuf::Message {
 public:
  PbRpcInternalTxSliceReadKeysResult();
  virtual ~PbRpcInternalTxSliceReadKeysResult();

  PbRpcInternalTxSliceReadKeysResult(const PbRpcInternalTxSliceReadKeysResult& from);

  inline PbRpcInternalTxSliceReadKeysResult& operator=(const PbRpcInternalTxSliceReadKeysResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcInternalTxSliceReadKeysResult& default_instance();

  void Swap(PbRpcInternalTxSliceReadKeysResult* other);

  // implements Message ----------------------------------------------

  PbRpcInternalTxSliceReadKeysResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcInternalTxSliceReadKeysResult& from);
  void MergeFrom(const PbRpcInternalTxSliceReadKeysResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool Succeeded = 1;
  inline bool has_succeeded() const;
  inline void clear_succeeded();
  static const int kSucceededFieldNumber = 1;
  inline bool succeeded() const;
  inline void set_succeeded(bool value);

  // repeated bytes Value = 2;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value(int index) const;
  inline ::std::string* mutable_value(int index);
  inline void set_value(int index, const ::std::string& value);
  inline void set_value(int index, const char* value);
  inline void set_value(int index, const void* value, size_t size);
  inline ::std::string* add_value();
  inline void add_value(const ::std::string& value);
  inline void add_value(const char* value);
  inline void add_value(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& value() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_value();

  // optional int32 SrcPartition = 3;
  inline bool has_srcpartition() const;
  inline void clear_srcpartition();
  static const int kSrcPartitionFieldNumber = 3;
  inline ::google::protobuf::int32 srcpartition() const;
  inline void set_srcpartition(::google::protobuf::int32 value);

  // optional int32 SrcDataCenter = 4;
  inline bool has_srcdatacenter() const;
  inline void clear_srcdatacenter();
  static const int kSrcDataCenterFieldNumber = 4;
  inline ::google::protobuf::int32 srcdatacenter() const;
  inline void set_srcdatacenter(::google::protobuf::int32 value);

  // optional int64 id = 5;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 5;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional double waitedXact = 6;
  inline bool has_waitedxact() const;
  inline void clear_waitedxact();
  static const int kWaitedXactFieldNumber = 6;
  inline double waitedxact() const;
  inline void set_waitedxact(double value);

  // @@protoc_insertion_point(class_scope:PbRpcInternalTxSliceReadKeysResult)
 private:
  inline void set_has_succeeded();
  inline void clear_has_succeeded();
  inline void set_has_srcpartition();
  inline void clear_has_srcpartition();
  inline void set_has_srcdatacenter();
  inline void clear_has_srcdatacenter();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_waitedxact();
  inline void clear_has_waitedxact();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> value_;
  bool succeeded_;
  ::google::protobuf::int32 srcpartition_;
  ::google::protobuf::int64 id_;
  double waitedxact_;
  ::google::protobuf::int32 srcdatacenter_;
  friend void  protobuf_AddDesc_tx_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tx_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tx_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcInternalTxSliceReadKeysResult* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcPrepareRequestArg : public ::google::protobuf::Message {
 public:
  PbRpcPrepareRequestArg();
  virtual ~PbRpcPrepareRequestArg();

  PbRpcPrepareRequestArg(const PbRpcPrepareRequestArg& from);

  inline PbRpcPrepareRequestArg& operator=(const PbRpcPrepareRequestArg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcPrepareRequestArg& default_instance();

  void Swap(PbRpcPrepareRequestArg* other);

  // implements Message ----------------------------------------------

  PbRpcPrepareRequestArg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcPrepareRequestArg& from);
  void MergeFrom(const PbRpcPrepareRequestArg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional .PbPhysicalTimeSpec UST = 2;
  inline bool has_ust() const;
  inline void clear_ust();
  static const int kUSTFieldNumber = 2;
  inline const ::PbPhysicalTimeSpec& ust() const;
  inline ::PbPhysicalTimeSpec* mutable_ust();
  inline ::PbPhysicalTimeSpec* release_ust();
  inline void set_allocated_ust(::PbPhysicalTimeSpec* ust);

  // required .PbPhysicalTimeSpec HT = 3;
  inline bool has_ht() const;
  inline void clear_ht();
  static const int kHTFieldNumber = 3;
  inline const ::PbPhysicalTimeSpec& ht() const;
  inline ::PbPhysicalTimeSpec* mutable_ht();
  inline ::PbPhysicalTimeSpec* release_ht();
  inline void set_allocated_ht(::PbPhysicalTimeSpec* ht);

  // repeated bytes Key = 4;
  inline int key_size() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 4;
  inline const ::std::string& key(int index) const;
  inline ::std::string* mutable_key(int index);
  inline void set_key(int index, const ::std::string& value);
  inline void set_key(int index, const char* value);
  inline void set_key(int index, const void* value, size_t size);
  inline ::std::string* add_key();
  inline void add_key(const ::std::string& value);
  inline void add_key(const char* value);
  inline void add_key(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& key() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_key();

  // repeated bytes Value = 5;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 5;
  inline const ::std::string& value(int index) const;
  inline ::std::string* mutable_value(int index);
  inline void set_value(int index, const ::std::string& value);
  inline void set_value(int index, const char* value);
  inline void set_value(int index, const void* value, size_t size);
  inline ::std::string* add_value();
  inline void add_value(const ::std::string& value);
  inline void add_value(const char* value);
  inline void add_value(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& value() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_value();

  // required int64 SrcPartition = 6;
  inline bool has_srcpartition() const;
  inline void clear_srcpartition();
  static const int kSrcPartitionFieldNumber = 6;
  inline ::google::protobuf::int64 srcpartition() const;
  inline void set_srcpartition(::google::protobuf::int64 value);

  // required int64 SrcDataCenter = 7;
  inline bool has_srcdatacenter() const;
  inline void clear_srcdatacenter();
  static const int kSrcDataCenterFieldNumber = 7;
  inline ::google::protobuf::int64 srcdatacenter() const;
  inline void set_srcdatacenter(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PbRpcPrepareRequestArg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_ust();
  inline void clear_has_ust();
  inline void set_has_ht();
  inline void clear_has_ht();
  inline void set_has_srcpartition();
  inline void clear_has_srcpartition();
  inline void set_has_srcdatacenter();
  inline void clear_has_srcdatacenter();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::PbPhysicalTimeSpec* ust_;
  ::PbPhysicalTimeSpec* ht_;
  ::google::protobuf::RepeatedPtrField< ::std::string> key_;
  ::google::protobuf::RepeatedPtrField< ::std::string> value_;
  ::google::protobuf::int64 srcpartition_;
  ::google::protobuf::int64 srcdatacenter_;
  friend void  protobuf_AddDesc_tx_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tx_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tx_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcPrepareRequestArg* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcPrepareRequestResult : public ::google::protobuf::Message {
 public:
  PbRpcPrepareRequestResult();
  virtual ~PbRpcPrepareRequestResult();

  PbRpcPrepareRequestResult(const PbRpcPrepareRequestResult& from);

  inline PbRpcPrepareRequestResult& operator=(const PbRpcPrepareRequestResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcPrepareRequestResult& default_instance();

  void Swap(PbRpcPrepareRequestResult* other);

  // implements Message ----------------------------------------------

  PbRpcPrepareRequestResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcPrepareRequestResult& from);
  void MergeFrom(const PbRpcPrepareRequestResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // required .PbPhysicalTimeSpec PT = 2;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPTFieldNumber = 2;
  inline const ::PbPhysicalTimeSpec& pt() const;
  inline ::PbPhysicalTimeSpec* mutable_pt();
  inline ::PbPhysicalTimeSpec* release_pt();
  inline void set_allocated_pt(::PbPhysicalTimeSpec* pt);

  // required int64 srcPartition = 3;
  inline bool has_srcpartition() const;
  inline void clear_srcpartition();
  static const int kSrcPartitionFieldNumber = 3;
  inline ::google::protobuf::int64 srcpartition() const;
  inline void set_srcpartition(::google::protobuf::int64 value);

  // required int64 srcDataCenter = 4;
  inline bool has_srcdatacenter() const;
  inline void clear_srcdatacenter();
  static const int kSrcDataCenterFieldNumber = 4;
  inline ::google::protobuf::int64 srcdatacenter() const;
  inline void set_srcdatacenter(::google::protobuf::int64 value);

  // optional double blockDuration = 5;
  inline bool has_blockduration() const;
  inline void clear_blockduration();
  static const int kBlockDurationFieldNumber = 5;
  inline double blockduration() const;
  inline void set_blockduration(double value);

  // @@protoc_insertion_point(class_scope:PbRpcPrepareRequestResult)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_srcpartition();
  inline void clear_has_srcpartition();
  inline void set_has_srcdatacenter();
  inline void clear_has_srcdatacenter();
  inline void set_has_blockduration();
  inline void clear_has_blockduration();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::PbPhysicalTimeSpec* pt_;
  ::google::protobuf::int64 srcpartition_;
  ::google::protobuf::int64 srcdatacenter_;
  double blockduration_;
  friend void  protobuf_AddDesc_tx_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tx_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tx_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcPrepareRequestResult* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcInternalPrepareReplyResult : public ::google::protobuf::Message {
 public:
  PbRpcInternalPrepareReplyResult();
  virtual ~PbRpcInternalPrepareReplyResult();

  PbRpcInternalPrepareReplyResult(const PbRpcInternalPrepareReplyResult& from);

  inline PbRpcInternalPrepareReplyResult& operator=(const PbRpcInternalPrepareReplyResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcInternalPrepareReplyResult& default_instance();

  void Swap(PbRpcInternalPrepareReplyResult* other);

  // implements Message ----------------------------------------------

  PbRpcInternalPrepareReplyResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcInternalPrepareReplyResult& from);
  void MergeFrom(const PbRpcInternalPrepareReplyResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // required .PbPhysicalTimeSpec PT = 2;
  inline bool has_pt() const;
  inline void clear_pt();
  static const int kPTFieldNumber = 2;
  inline const ::PbPhysicalTimeSpec& pt() const;
  inline ::PbPhysicalTimeSpec* mutable_pt();
  inline ::PbPhysicalTimeSpec* release_pt();
  inline void set_allocated_pt(::PbPhysicalTimeSpec* pt);

  // required int64 srcPartition = 3;
  inline bool has_srcpartition() const;
  inline void clear_srcpartition();
  static const int kSrcPartitionFieldNumber = 3;
  inline ::google::protobuf::int64 srcpartition() const;
  inline void set_srcpartition(::google::protobuf::int64 value);

  // required int64 srcDataCenter = 4;
  inline bool has_srcdatacenter() const;
  inline void clear_srcdatacenter();
  static const int kSrcDataCenterFieldNumber = 4;
  inline ::google::protobuf::int64 srcdatacenter() const;
  inline void set_srcdatacenter(::google::protobuf::int64 value);

  // optional double blockDuration = 5;
  inline bool has_blockduration() const;
  inline void clear_blockduration();
  static const int kBlockDurationFieldNumber = 5;
  inline double blockduration() const;
  inline void set_blockduration(double value);

  // @@protoc_insertion_point(class_scope:PbRpcInternalPrepareReplyResult)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_pt();
  inline void clear_has_pt();
  inline void set_has_srcpartition();
  inline void clear_has_srcpartition();
  inline void set_has_srcdatacenter();
  inline void clear_has_srcdatacenter();
  inline void set_has_blockduration();
  inline void clear_has_blockduration();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::PbPhysicalTimeSpec* pt_;
  ::google::protobuf::int64 srcpartition_;
  ::google::protobuf::int64 srcdatacenter_;
  double blockduration_;
  friend void  protobuf_AddDesc_tx_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tx_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tx_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcInternalPrepareReplyResult* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcGST : public ::google::protobuf::Message {
 public:
  PbRpcGST();
  virtual ~PbRpcGST();

  PbRpcGST(const PbRpcGST& from);

  inline PbRpcGST& operator=(const PbRpcGST& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcGST& default_instance();

  void Swap(PbRpcGST* other);

  // implements Message ----------------------------------------------

  PbRpcGST* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcGST& from);
  void MergeFrom(const PbRpcGST& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .PbPhysicalTimeSpec GST = 1;
  inline bool has_gst() const;
  inline void clear_gst();
  static const int kGSTFieldNumber = 1;
  inline const ::PbPhysicalTimeSpec& gst() const;
  inline ::PbPhysicalTimeSpec* mutable_gst();
  inline ::PbPhysicalTimeSpec* release_gst();
  inline void set_allocated_gst(::PbPhysicalTimeSpec* gst);

  // @@protoc_insertion_point(class_scope:PbRpcGST)
 private:
  inline void set_has_gst();
  inline void clear_has_gst();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::PbPhysicalTimeSpec* gst_;
  friend void  protobuf_AddDesc_tx_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tx_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tx_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcGST* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcLST : public ::google::protobuf::Message {
 public:
  PbRpcLST();
  virtual ~PbRpcLST();

  PbRpcLST(const PbRpcLST& from);

  inline PbRpcLST& operator=(const PbRpcLST& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcLST& default_instance();

  void Swap(PbRpcLST* other);

  // implements Message ----------------------------------------------

  PbRpcLST* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcLST& from);
  void MergeFrom(const PbRpcLST& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Round = 1;
  inline bool has_round() const;
  inline void clear_round();
  static const int kRoundFieldNumber = 1;
  inline ::google::protobuf::int32 round() const;
  inline void set_round(::google::protobuf::int32 value);

  // required .PbPhysicalTimeSpec LST = 2;
  inline bool has_lst() const;
  inline void clear_lst();
  static const int kLSTFieldNumber = 2;
  inline const ::PbPhysicalTimeSpec& lst() const;
  inline ::PbPhysicalTimeSpec* mutable_lst();
  inline ::PbPhysicalTimeSpec* release_lst();
  inline void set_allocated_lst(::PbPhysicalTimeSpec* lst);

  // @@protoc_insertion_point(class_scope:PbRpcLST)
 private:
  inline void set_has_round();
  inline void clear_has_round();
  inline void set_has_lst();
  inline void clear_has_lst();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::PbPhysicalTimeSpec* lst_;
  ::google::protobuf::int32 round_;
  friend void  protobuf_AddDesc_tx_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tx_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tx_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcLST* default_instance_;
};
// -------------------------------------------------------------------

class PbRpcGSTandUST : public ::google::protobuf::Message {
 public:
  PbRpcGSTandUST();
  virtual ~PbRpcGSTandUST();

  PbRpcGSTandUST(const PbRpcGSTandUST& from);

  inline PbRpcGSTandUST& operator=(const PbRpcGSTandUST& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PbRpcGSTandUST& default_instance();

  void Swap(PbRpcGSTandUST* other);

  // implements Message ----------------------------------------------

  PbRpcGSTandUST* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbRpcGSTandUST& from);
  void MergeFrom(const PbRpcGSTandUST& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .PbPhysicalTimeSpec GST = 1;
  inline bool has_gst() const;
  inline void clear_gst();
  static const int kGSTFieldNumber = 1;
  inline const ::PbPhysicalTimeSpec& gst() const;
  inline ::PbPhysicalTimeSpec* mutable_gst();
  inline ::PbPhysicalTimeSpec* release_gst();
  inline void set_allocated_gst(::PbPhysicalTimeSpec* gst);

  // required .PbPhysicalTimeSpec UST = 2;
  inline bool has_ust() const;
  inline void clear_ust();
  static const int kUSTFieldNumber = 2;
  inline const ::PbPhysicalTimeSpec& ust() const;
  inline ::PbPhysicalTimeSpec* mutable_ust();
  inline ::PbPhysicalTimeSpec* release_ust();
  inline void set_allocated_ust(::PbPhysicalTimeSpec* ust);

  // @@protoc_insertion_point(class_scope:PbRpcGSTandUST)
 private:
  inline void set_has_gst();
  inline void clear_has_gst();
  inline void set_has_ust();
  inline void clear_has_ust();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::PbPhysicalTimeSpec* gst_;
  ::PbPhysicalTimeSpec* ust_;
  friend void  protobuf_AddDesc_tx_5fmessages_2eproto();
  friend void protobuf_AssignDesc_tx_5fmessages_2eproto();
  friend void protobuf_ShutdownFile_tx_5fmessages_2eproto();

  void InitAsDefaultInstance();
  static PbRpcGSTandUST* default_instance_;
};
// ===================================================================


// ===================================================================

// PbRpcTxPublicGetServerConfigResult

// required bool Succeeded = 1;
inline bool PbRpcTxPublicGetServerConfigResult::has_succeeded() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcTxPublicGetServerConfigResult::set_has_succeeded() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcTxPublicGetServerConfigResult::clear_has_succeeded() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcTxPublicGetServerConfigResult::clear_succeeded() {
  succeeded_ = false;
  clear_has_succeeded();
}
inline bool PbRpcTxPublicGetServerConfigResult::succeeded() const {
  // @@protoc_insertion_point(field_get:PbRpcTxPublicGetServerConfigResult.Succeeded)
  return succeeded_;
}
inline void PbRpcTxPublicGetServerConfigResult::set_succeeded(bool value) {
  set_has_succeeded();
  succeeded_ = value;
  // @@protoc_insertion_point(field_set:PbRpcTxPublicGetServerConfigResult.Succeeded)
}

// required int32 NumPartitions = 2;
inline bool PbRpcTxPublicGetServerConfigResult::has_numpartitions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbRpcTxPublicGetServerConfigResult::set_has_numpartitions() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbRpcTxPublicGetServerConfigResult::clear_has_numpartitions() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbRpcTxPublicGetServerConfigResult::clear_numpartitions() {
  numpartitions_ = 0;
  clear_has_numpartitions();
}
inline ::google::protobuf::int32 PbRpcTxPublicGetServerConfigResult::numpartitions() const {
  // @@protoc_insertion_point(field_get:PbRpcTxPublicGetServerConfigResult.NumPartitions)
  return numpartitions_;
}
inline void PbRpcTxPublicGetServerConfigResult::set_numpartitions(::google::protobuf::int32 value) {
  set_has_numpartitions();
  numpartitions_ = value;
  // @@protoc_insertion_point(field_set:PbRpcTxPublicGetServerConfigResult.NumPartitions)
}

// required int32 NumDataCenters = 3;
inline bool PbRpcTxPublicGetServerConfigResult::has_numdatacenters() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbRpcTxPublicGetServerConfigResult::set_has_numdatacenters() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PbRpcTxPublicGetServerConfigResult::clear_has_numdatacenters() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PbRpcTxPublicGetServerConfigResult::clear_numdatacenters() {
  numdatacenters_ = 0;
  clear_has_numdatacenters();
}
inline ::google::protobuf::int32 PbRpcTxPublicGetServerConfigResult::numdatacenters() const {
  // @@protoc_insertion_point(field_get:PbRpcTxPublicGetServerConfigResult.NumDataCenters)
  return numdatacenters_;
}
inline void PbRpcTxPublicGetServerConfigResult::set_numdatacenters(::google::protobuf::int32 value) {
  set_has_numdatacenters();
  numdatacenters_ = value;
  // @@protoc_insertion_point(field_set:PbRpcTxPublicGetServerConfigResult.NumDataCenters)
}

// required int32 PartitionReplicationFactor = 4;
inline bool PbRpcTxPublicGetServerConfigResult::has_partitionreplicationfactor() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PbRpcTxPublicGetServerConfigResult::set_has_partitionreplicationfactor() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PbRpcTxPublicGetServerConfigResult::clear_has_partitionreplicationfactor() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PbRpcTxPublicGetServerConfigResult::clear_partitionreplicationfactor() {
  partitionreplicationfactor_ = 0;
  clear_has_partitionreplicationfactor();
}
inline ::google::protobuf::int32 PbRpcTxPublicGetServerConfigResult::partitionreplicationfactor() const {
  // @@protoc_insertion_point(field_get:PbRpcTxPublicGetServerConfigResult.PartitionReplicationFactor)
  return partitionreplicationfactor_;
}
inline void PbRpcTxPublicGetServerConfigResult::set_partitionreplicationfactor(::google::protobuf::int32 value) {
  set_has_partitionreplicationfactor();
  partitionreplicationfactor_ = value;
  // @@protoc_insertion_point(field_set:PbRpcTxPublicGetServerConfigResult.PartitionReplicationFactor)
}

// required int32 replicaId = 5;
inline bool PbRpcTxPublicGetServerConfigResult::has_replicaid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PbRpcTxPublicGetServerConfigResult::set_has_replicaid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PbRpcTxPublicGetServerConfigResult::clear_has_replicaid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PbRpcTxPublicGetServerConfigResult::clear_replicaid() {
  replicaid_ = 0;
  clear_has_replicaid();
}
inline ::google::protobuf::int32 PbRpcTxPublicGetServerConfigResult::replicaid() const {
  // @@protoc_insertion_point(field_get:PbRpcTxPublicGetServerConfigResult.replicaId)
  return replicaid_;
}
inline void PbRpcTxPublicGetServerConfigResult::set_replicaid(::google::protobuf::int32 value) {
  set_has_replicaid();
  replicaid_ = value;
  // @@protoc_insertion_point(field_set:PbRpcTxPublicGetServerConfigResult.replicaId)
}

// -------------------------------------------------------------------

// PbRpcPublicStartArg

// optional .PbPhysicalTimeSpec UST = 1;
inline bool PbRpcPublicStartArg::has_ust() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcPublicStartArg::set_has_ust() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcPublicStartArg::clear_has_ust() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcPublicStartArg::clear_ust() {
  if (ust_ != NULL) ust_->::PbPhysicalTimeSpec::Clear();
  clear_has_ust();
}
inline const ::PbPhysicalTimeSpec& PbRpcPublicStartArg::ust() const {
  // @@protoc_insertion_point(field_get:PbRpcPublicStartArg.UST)
  return ust_ != NULL ? *ust_ : *default_instance_->ust_;
}
inline ::PbPhysicalTimeSpec* PbRpcPublicStartArg::mutable_ust() {
  set_has_ust();
  if (ust_ == NULL) ust_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcPublicStartArg.UST)
  return ust_;
}
inline ::PbPhysicalTimeSpec* PbRpcPublicStartArg::release_ust() {
  clear_has_ust();
  ::PbPhysicalTimeSpec* temp = ust_;
  ust_ = NULL;
  return temp;
}
inline void PbRpcPublicStartArg::set_allocated_ust(::PbPhysicalTimeSpec* ust) {
  delete ust_;
  ust_ = ust;
  if (ust) {
    set_has_ust();
  } else {
    clear_has_ust();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcPublicStartArg.UST)
}

// -------------------------------------------------------------------

// PbRpcPublicStartResult

// required bool Succeeded = 1;
inline bool PbRpcPublicStartResult::has_succeeded() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcPublicStartResult::set_has_succeeded() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcPublicStartResult::clear_has_succeeded() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcPublicStartResult::clear_succeeded() {
  succeeded_ = false;
  clear_has_succeeded();
}
inline bool PbRpcPublicStartResult::succeeded() const {
  // @@protoc_insertion_point(field_get:PbRpcPublicStartResult.Succeeded)
  return succeeded_;
}
inline void PbRpcPublicStartResult::set_succeeded(bool value) {
  set_has_succeeded();
  succeeded_ = value;
  // @@protoc_insertion_point(field_set:PbRpcPublicStartResult.Succeeded)
}

// required int64 ID = 2;
inline bool PbRpcPublicStartResult::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbRpcPublicStartResult::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbRpcPublicStartResult::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbRpcPublicStartResult::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PbRpcPublicStartResult::id() const {
  // @@protoc_insertion_point(field_get:PbRpcPublicStartResult.ID)
  return id_;
}
inline void PbRpcPublicStartResult::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PbRpcPublicStartResult.ID)
}

// optional .PbPhysicalTimeSpec UST = 3;
inline bool PbRpcPublicStartResult::has_ust() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbRpcPublicStartResult::set_has_ust() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PbRpcPublicStartResult::clear_has_ust() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PbRpcPublicStartResult::clear_ust() {
  if (ust_ != NULL) ust_->::PbPhysicalTimeSpec::Clear();
  clear_has_ust();
}
inline const ::PbPhysicalTimeSpec& PbRpcPublicStartResult::ust() const {
  // @@protoc_insertion_point(field_get:PbRpcPublicStartResult.UST)
  return ust_ != NULL ? *ust_ : *default_instance_->ust_;
}
inline ::PbPhysicalTimeSpec* PbRpcPublicStartResult::mutable_ust() {
  set_has_ust();
  if (ust_ == NULL) ust_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcPublicStartResult.UST)
  return ust_;
}
inline ::PbPhysicalTimeSpec* PbRpcPublicStartResult::release_ust() {
  clear_has_ust();
  ::PbPhysicalTimeSpec* temp = ust_;
  ust_ = NULL;
  return temp;
}
inline void PbRpcPublicStartResult::set_allocated_ust(::PbPhysicalTimeSpec* ust) {
  delete ust_;
  ust_ = ust;
  if (ust) {
    set_has_ust();
  } else {
    clear_has_ust();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcPublicStartResult.UST)
}

// -------------------------------------------------------------------

// PbRpcPublicReadArg

// optional int64 ID = 1;
inline bool PbRpcPublicReadArg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcPublicReadArg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcPublicReadArg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcPublicReadArg::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PbRpcPublicReadArg::id() const {
  // @@protoc_insertion_point(field_get:PbRpcPublicReadArg.ID)
  return id_;
}
inline void PbRpcPublicReadArg::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PbRpcPublicReadArg.ID)
}

// repeated bytes Key = 2;
inline int PbRpcPublicReadArg::key_size() const {
  return key_.size();
}
inline void PbRpcPublicReadArg::clear_key() {
  key_.Clear();
}
inline const ::std::string& PbRpcPublicReadArg::key(int index) const {
  // @@protoc_insertion_point(field_get:PbRpcPublicReadArg.Key)
  return key_.Get(index);
}
inline ::std::string* PbRpcPublicReadArg::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:PbRpcPublicReadArg.Key)
  return key_.Mutable(index);
}
inline void PbRpcPublicReadArg::set_key(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PbRpcPublicReadArg.Key)
  key_.Mutable(index)->assign(value);
}
inline void PbRpcPublicReadArg::set_key(int index, const char* value) {
  key_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PbRpcPublicReadArg.Key)
}
inline void PbRpcPublicReadArg::set_key(int index, const void* value, size_t size) {
  key_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PbRpcPublicReadArg.Key)
}
inline ::std::string* PbRpcPublicReadArg::add_key() {
  return key_.Add();
}
inline void PbRpcPublicReadArg::add_key(const ::std::string& value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PbRpcPublicReadArg.Key)
}
inline void PbRpcPublicReadArg::add_key(const char* value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PbRpcPublicReadArg.Key)
}
inline void PbRpcPublicReadArg::add_key(const void* value, size_t size) {
  key_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PbRpcPublicReadArg.Key)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PbRpcPublicReadArg::key() const {
  // @@protoc_insertion_point(field_list:PbRpcPublicReadArg.Key)
  return key_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PbRpcPublicReadArg::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:PbRpcPublicReadArg.Key)
  return &key_;
}

// optional bool noTxId = 3;
inline bool PbRpcPublicReadArg::has_notxid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbRpcPublicReadArg::set_has_notxid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PbRpcPublicReadArg::clear_has_notxid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PbRpcPublicReadArg::clear_notxid() {
  notxid_ = false;
  clear_has_notxid();
}
inline bool PbRpcPublicReadArg::notxid() const {
  // @@protoc_insertion_point(field_get:PbRpcPublicReadArg.noTxId)
  return notxid_;
}
inline void PbRpcPublicReadArg::set_notxid(bool value) {
  set_has_notxid();
  notxid_ = value;
  // @@protoc_insertion_point(field_set:PbRpcPublicReadArg.noTxId)
}

// -------------------------------------------------------------------

// PbRpcPublicReadResult

// required bool Succeeded = 1;
inline bool PbRpcPublicReadResult::has_succeeded() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcPublicReadResult::set_has_succeeded() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcPublicReadResult::clear_has_succeeded() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcPublicReadResult::clear_succeeded() {
  succeeded_ = false;
  clear_has_succeeded();
}
inline bool PbRpcPublicReadResult::succeeded() const {
  // @@protoc_insertion_point(field_get:PbRpcPublicReadResult.Succeeded)
  return succeeded_;
}
inline void PbRpcPublicReadResult::set_succeeded(bool value) {
  set_has_succeeded();
  succeeded_ = value;
  // @@protoc_insertion_point(field_set:PbRpcPublicReadResult.Succeeded)
}

// repeated bytes Value = 2;
inline int PbRpcPublicReadResult::value_size() const {
  return value_.size();
}
inline void PbRpcPublicReadResult::clear_value() {
  value_.Clear();
}
inline const ::std::string& PbRpcPublicReadResult::value(int index) const {
  // @@protoc_insertion_point(field_get:PbRpcPublicReadResult.Value)
  return value_.Get(index);
}
inline ::std::string* PbRpcPublicReadResult::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:PbRpcPublicReadResult.Value)
  return value_.Mutable(index);
}
inline void PbRpcPublicReadResult::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PbRpcPublicReadResult.Value)
  value_.Mutable(index)->assign(value);
}
inline void PbRpcPublicReadResult::set_value(int index, const char* value) {
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PbRpcPublicReadResult.Value)
}
inline void PbRpcPublicReadResult::set_value(int index, const void* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PbRpcPublicReadResult.Value)
}
inline ::std::string* PbRpcPublicReadResult::add_value() {
  return value_.Add();
}
inline void PbRpcPublicReadResult::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PbRpcPublicReadResult.Value)
}
inline void PbRpcPublicReadResult::add_value(const char* value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PbRpcPublicReadResult.Value)
}
inline void PbRpcPublicReadResult::add_value(const void* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PbRpcPublicReadResult.Value)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PbRpcPublicReadResult::value() const {
  // @@protoc_insertion_point(field_list:PbRpcPublicReadResult.Value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PbRpcPublicReadResult::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:PbRpcPublicReadResult.Value)
  return &value_;
}

// optional int64 ID = 3;
inline bool PbRpcPublicReadResult::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbRpcPublicReadResult::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PbRpcPublicReadResult::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PbRpcPublicReadResult::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PbRpcPublicReadResult::id() const {
  // @@protoc_insertion_point(field_get:PbRpcPublicReadResult.ID)
  return id_;
}
inline void PbRpcPublicReadResult::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PbRpcPublicReadResult.ID)
}

// -------------------------------------------------------------------

// PbRpcPublicCommitArg

// required int64 ID = 1;
inline bool PbRpcPublicCommitArg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcPublicCommitArg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcPublicCommitArg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcPublicCommitArg::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PbRpcPublicCommitArg::id() const {
  // @@protoc_insertion_point(field_get:PbRpcPublicCommitArg.ID)
  return id_;
}
inline void PbRpcPublicCommitArg::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PbRpcPublicCommitArg.ID)
}

// repeated bytes Key = 2;
inline int PbRpcPublicCommitArg::key_size() const {
  return key_.size();
}
inline void PbRpcPublicCommitArg::clear_key() {
  key_.Clear();
}
inline const ::std::string& PbRpcPublicCommitArg::key(int index) const {
  // @@protoc_insertion_point(field_get:PbRpcPublicCommitArg.Key)
  return key_.Get(index);
}
inline ::std::string* PbRpcPublicCommitArg::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:PbRpcPublicCommitArg.Key)
  return key_.Mutable(index);
}
inline void PbRpcPublicCommitArg::set_key(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PbRpcPublicCommitArg.Key)
  key_.Mutable(index)->assign(value);
}
inline void PbRpcPublicCommitArg::set_key(int index, const char* value) {
  key_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PbRpcPublicCommitArg.Key)
}
inline void PbRpcPublicCommitArg::set_key(int index, const void* value, size_t size) {
  key_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PbRpcPublicCommitArg.Key)
}
inline ::std::string* PbRpcPublicCommitArg::add_key() {
  return key_.Add();
}
inline void PbRpcPublicCommitArg::add_key(const ::std::string& value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PbRpcPublicCommitArg.Key)
}
inline void PbRpcPublicCommitArg::add_key(const char* value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PbRpcPublicCommitArg.Key)
}
inline void PbRpcPublicCommitArg::add_key(const void* value, size_t size) {
  key_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PbRpcPublicCommitArg.Key)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PbRpcPublicCommitArg::key() const {
  // @@protoc_insertion_point(field_list:PbRpcPublicCommitArg.Key)
  return key_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PbRpcPublicCommitArg::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:PbRpcPublicCommitArg.Key)
  return &key_;
}

// repeated bytes Value = 3;
inline int PbRpcPublicCommitArg::value_size() const {
  return value_.size();
}
inline void PbRpcPublicCommitArg::clear_value() {
  value_.Clear();
}
inline const ::std::string& PbRpcPublicCommitArg::value(int index) const {
  // @@protoc_insertion_point(field_get:PbRpcPublicCommitArg.Value)
  return value_.Get(index);
}
inline ::std::string* PbRpcPublicCommitArg::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:PbRpcPublicCommitArg.Value)
  return value_.Mutable(index);
}
inline void PbRpcPublicCommitArg::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PbRpcPublicCommitArg.Value)
  value_.Mutable(index)->assign(value);
}
inline void PbRpcPublicCommitArg::set_value(int index, const char* value) {
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PbRpcPublicCommitArg.Value)
}
inline void PbRpcPublicCommitArg::set_value(int index, const void* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PbRpcPublicCommitArg.Value)
}
inline ::std::string* PbRpcPublicCommitArg::add_value() {
  return value_.Add();
}
inline void PbRpcPublicCommitArg::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PbRpcPublicCommitArg.Value)
}
inline void PbRpcPublicCommitArg::add_value(const char* value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PbRpcPublicCommitArg.Value)
}
inline void PbRpcPublicCommitArg::add_value(const void* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PbRpcPublicCommitArg.Value)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PbRpcPublicCommitArg::value() const {
  // @@protoc_insertion_point(field_list:PbRpcPublicCommitArg.Value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PbRpcPublicCommitArg::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:PbRpcPublicCommitArg.Value)
  return &value_;
}

// optional .PbPhysicalTimeSpec LCT = 4;
inline bool PbRpcPublicCommitArg::has_lct() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PbRpcPublicCommitArg::set_has_lct() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PbRpcPublicCommitArg::clear_has_lct() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PbRpcPublicCommitArg::clear_lct() {
  if (lct_ != NULL) lct_->::PbPhysicalTimeSpec::Clear();
  clear_has_lct();
}
inline const ::PbPhysicalTimeSpec& PbRpcPublicCommitArg::lct() const {
  // @@protoc_insertion_point(field_get:PbRpcPublicCommitArg.LCT)
  return lct_ != NULL ? *lct_ : *default_instance_->lct_;
}
inline ::PbPhysicalTimeSpec* PbRpcPublicCommitArg::mutable_lct() {
  set_has_lct();
  if (lct_ == NULL) lct_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcPublicCommitArg.LCT)
  return lct_;
}
inline ::PbPhysicalTimeSpec* PbRpcPublicCommitArg::release_lct() {
  clear_has_lct();
  ::PbPhysicalTimeSpec* temp = lct_;
  lct_ = NULL;
  return temp;
}
inline void PbRpcPublicCommitArg::set_allocated_lct(::PbPhysicalTimeSpec* lct) {
  delete lct_;
  lct_ = lct;
  if (lct) {
    set_has_lct();
  } else {
    clear_has_lct();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcPublicCommitArg.LCT)
}

// -------------------------------------------------------------------

// PbRpcPublicCommitResult

// required bool Succeeded = 1;
inline bool PbRpcPublicCommitResult::has_succeeded() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcPublicCommitResult::set_has_succeeded() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcPublicCommitResult::clear_has_succeeded() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcPublicCommitResult::clear_succeeded() {
  succeeded_ = false;
  clear_has_succeeded();
}
inline bool PbRpcPublicCommitResult::succeeded() const {
  // @@protoc_insertion_point(field_get:PbRpcPublicCommitResult.Succeeded)
  return succeeded_;
}
inline void PbRpcPublicCommitResult::set_succeeded(bool value) {
  set_has_succeeded();
  succeeded_ = value;
  // @@protoc_insertion_point(field_set:PbRpcPublicCommitResult.Succeeded)
}

// required .PbPhysicalTimeSpec CT = 2;
inline bool PbRpcPublicCommitResult::has_ct() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbRpcPublicCommitResult::set_has_ct() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbRpcPublicCommitResult::clear_has_ct() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbRpcPublicCommitResult::clear_ct() {
  if (ct_ != NULL) ct_->::PbPhysicalTimeSpec::Clear();
  clear_has_ct();
}
inline const ::PbPhysicalTimeSpec& PbRpcPublicCommitResult::ct() const {
  // @@protoc_insertion_point(field_get:PbRpcPublicCommitResult.CT)
  return ct_ != NULL ? *ct_ : *default_instance_->ct_;
}
inline ::PbPhysicalTimeSpec* PbRpcPublicCommitResult::mutable_ct() {
  set_has_ct();
  if (ct_ == NULL) ct_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcPublicCommitResult.CT)
  return ct_;
}
inline ::PbPhysicalTimeSpec* PbRpcPublicCommitResult::release_ct() {
  clear_has_ct();
  ::PbPhysicalTimeSpec* temp = ct_;
  ct_ = NULL;
  return temp;
}
inline void PbRpcPublicCommitResult::set_allocated_ct(::PbPhysicalTimeSpec* ct) {
  delete ct_;
  ct_ = ct;
  if (ct) {
    set_has_ct();
  } else {
    clear_has_ct();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcPublicCommitResult.CT)
}

// -------------------------------------------------------------------

// PbRpcPublicGetRemotePartitionsIdsResult

// required bool Succeeded = 1;
inline bool PbRpcPublicGetRemotePartitionsIdsResult::has_succeeded() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcPublicGetRemotePartitionsIdsResult::set_has_succeeded() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcPublicGetRemotePartitionsIdsResult::clear_has_succeeded() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcPublicGetRemotePartitionsIdsResult::clear_succeeded() {
  succeeded_ = false;
  clear_has_succeeded();
}
inline bool PbRpcPublicGetRemotePartitionsIdsResult::succeeded() const {
  // @@protoc_insertion_point(field_get:PbRpcPublicGetRemotePartitionsIdsResult.Succeeded)
  return succeeded_;
}
inline void PbRpcPublicGetRemotePartitionsIdsResult::set_succeeded(bool value) {
  set_has_succeeded();
  succeeded_ = value;
  // @@protoc_insertion_point(field_set:PbRpcPublicGetRemotePartitionsIdsResult.Succeeded)
}

// repeated int64 pids = 2;
inline int PbRpcPublicGetRemotePartitionsIdsResult::pids_size() const {
  return pids_.size();
}
inline void PbRpcPublicGetRemotePartitionsIdsResult::clear_pids() {
  pids_.Clear();
}
inline ::google::protobuf::int64 PbRpcPublicGetRemotePartitionsIdsResult::pids(int index) const {
  // @@protoc_insertion_point(field_get:PbRpcPublicGetRemotePartitionsIdsResult.pids)
  return pids_.Get(index);
}
inline void PbRpcPublicGetRemotePartitionsIdsResult::set_pids(int index, ::google::protobuf::int64 value) {
  pids_.Set(index, value);
  // @@protoc_insertion_point(field_set:PbRpcPublicGetRemotePartitionsIdsResult.pids)
}
inline void PbRpcPublicGetRemotePartitionsIdsResult::add_pids(::google::protobuf::int64 value) {
  pids_.Add(value);
  // @@protoc_insertion_point(field_add:PbRpcPublicGetRemotePartitionsIdsResult.pids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
PbRpcPublicGetRemotePartitionsIdsResult::pids() const {
  // @@protoc_insertion_point(field_list:PbRpcPublicGetRemotePartitionsIdsResult.pids)
  return pids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
PbRpcPublicGetRemotePartitionsIdsResult::mutable_pids() {
  // @@protoc_insertion_point(field_mutable_list:PbRpcPublicGetRemotePartitionsIdsResult.pids)
  return &pids_;
}

// -------------------------------------------------------------------

// PbRpcInternalTxSliceReadKeysArg

// repeated bytes Key = 1;
inline int PbRpcInternalTxSliceReadKeysArg::key_size() const {
  return key_.size();
}
inline void PbRpcInternalTxSliceReadKeysArg::clear_key() {
  key_.Clear();
}
inline const ::std::string& PbRpcInternalTxSliceReadKeysArg::key(int index) const {
  // @@protoc_insertion_point(field_get:PbRpcInternalTxSliceReadKeysArg.Key)
  return key_.Get(index);
}
inline ::std::string* PbRpcInternalTxSliceReadKeysArg::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:PbRpcInternalTxSliceReadKeysArg.Key)
  return key_.Mutable(index);
}
inline void PbRpcInternalTxSliceReadKeysArg::set_key(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PbRpcInternalTxSliceReadKeysArg.Key)
  key_.Mutable(index)->assign(value);
}
inline void PbRpcInternalTxSliceReadKeysArg::set_key(int index, const char* value) {
  key_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PbRpcInternalTxSliceReadKeysArg.Key)
}
inline void PbRpcInternalTxSliceReadKeysArg::set_key(int index, const void* value, size_t size) {
  key_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PbRpcInternalTxSliceReadKeysArg.Key)
}
inline ::std::string* PbRpcInternalTxSliceReadKeysArg::add_key() {
  return key_.Add();
}
inline void PbRpcInternalTxSliceReadKeysArg::add_key(const ::std::string& value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PbRpcInternalTxSliceReadKeysArg.Key)
}
inline void PbRpcInternalTxSliceReadKeysArg::add_key(const char* value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PbRpcInternalTxSliceReadKeysArg.Key)
}
inline void PbRpcInternalTxSliceReadKeysArg::add_key(const void* value, size_t size) {
  key_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PbRpcInternalTxSliceReadKeysArg.Key)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PbRpcInternalTxSliceReadKeysArg::key() const {
  // @@protoc_insertion_point(field_list:PbRpcInternalTxSliceReadKeysArg.Key)
  return key_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PbRpcInternalTxSliceReadKeysArg::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:PbRpcInternalTxSliceReadKeysArg.Key)
  return &key_;
}

// optional .PbPhysicalTimeSpec UST = 2;
inline bool PbRpcInternalTxSliceReadKeysArg::has_ust() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbRpcInternalTxSliceReadKeysArg::set_has_ust() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbRpcInternalTxSliceReadKeysArg::clear_has_ust() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbRpcInternalTxSliceReadKeysArg::clear_ust() {
  if (ust_ != NULL) ust_->::PbPhysicalTimeSpec::Clear();
  clear_has_ust();
}
inline const ::PbPhysicalTimeSpec& PbRpcInternalTxSliceReadKeysArg::ust() const {
  // @@protoc_insertion_point(field_get:PbRpcInternalTxSliceReadKeysArg.UST)
  return ust_ != NULL ? *ust_ : *default_instance_->ust_;
}
inline ::PbPhysicalTimeSpec* PbRpcInternalTxSliceReadKeysArg::mutable_ust() {
  set_has_ust();
  if (ust_ == NULL) ust_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcInternalTxSliceReadKeysArg.UST)
  return ust_;
}
inline ::PbPhysicalTimeSpec* PbRpcInternalTxSliceReadKeysArg::release_ust() {
  clear_has_ust();
  ::PbPhysicalTimeSpec* temp = ust_;
  ust_ = NULL;
  return temp;
}
inline void PbRpcInternalTxSliceReadKeysArg::set_allocated_ust(::PbPhysicalTimeSpec* ust) {
  delete ust_;
  ust_ = ust;
  if (ust) {
    set_has_ust();
  } else {
    clear_has_ust();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcInternalTxSliceReadKeysArg.UST)
}

// optional int64 id = 3;
inline bool PbRpcInternalTxSliceReadKeysArg::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbRpcInternalTxSliceReadKeysArg::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PbRpcInternalTxSliceReadKeysArg::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PbRpcInternalTxSliceReadKeysArg::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PbRpcInternalTxSliceReadKeysArg::id() const {
  // @@protoc_insertion_point(field_get:PbRpcInternalTxSliceReadKeysArg.id)
  return id_;
}
inline void PbRpcInternalTxSliceReadKeysArg::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PbRpcInternalTxSliceReadKeysArg.id)
}

// optional int64 srcPartition = 4;
inline bool PbRpcInternalTxSliceReadKeysArg::has_srcpartition() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PbRpcInternalTxSliceReadKeysArg::set_has_srcpartition() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PbRpcInternalTxSliceReadKeysArg::clear_has_srcpartition() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PbRpcInternalTxSliceReadKeysArg::clear_srcpartition() {
  srcpartition_ = GOOGLE_LONGLONG(0);
  clear_has_srcpartition();
}
inline ::google::protobuf::int64 PbRpcInternalTxSliceReadKeysArg::srcpartition() const {
  // @@protoc_insertion_point(field_get:PbRpcInternalTxSliceReadKeysArg.srcPartition)
  return srcpartition_;
}
inline void PbRpcInternalTxSliceReadKeysArg::set_srcpartition(::google::protobuf::int64 value) {
  set_has_srcpartition();
  srcpartition_ = value;
  // @@protoc_insertion_point(field_set:PbRpcInternalTxSliceReadKeysArg.srcPartition)
}

// optional int64 srcDataCenter = 5;
inline bool PbRpcInternalTxSliceReadKeysArg::has_srcdatacenter() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PbRpcInternalTxSliceReadKeysArg::set_has_srcdatacenter() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PbRpcInternalTxSliceReadKeysArg::clear_has_srcdatacenter() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PbRpcInternalTxSliceReadKeysArg::clear_srcdatacenter() {
  srcdatacenter_ = GOOGLE_LONGLONG(0);
  clear_has_srcdatacenter();
}
inline ::google::protobuf::int64 PbRpcInternalTxSliceReadKeysArg::srcdatacenter() const {
  // @@protoc_insertion_point(field_get:PbRpcInternalTxSliceReadKeysArg.srcDataCenter)
  return srcdatacenter_;
}
inline void PbRpcInternalTxSliceReadKeysArg::set_srcdatacenter(::google::protobuf::int64 value) {
  set_has_srcdatacenter();
  srcdatacenter_ = value;
  // @@protoc_insertion_point(field_set:PbRpcInternalTxSliceReadKeysArg.srcDataCenter)
}

// -------------------------------------------------------------------

// PbRpcInternalTxSliceReadKeysResult

// required bool Succeeded = 1;
inline bool PbRpcInternalTxSliceReadKeysResult::has_succeeded() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcInternalTxSliceReadKeysResult::set_has_succeeded() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcInternalTxSliceReadKeysResult::clear_has_succeeded() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcInternalTxSliceReadKeysResult::clear_succeeded() {
  succeeded_ = false;
  clear_has_succeeded();
}
inline bool PbRpcInternalTxSliceReadKeysResult::succeeded() const {
  // @@protoc_insertion_point(field_get:PbRpcInternalTxSliceReadKeysResult.Succeeded)
  return succeeded_;
}
inline void PbRpcInternalTxSliceReadKeysResult::set_succeeded(bool value) {
  set_has_succeeded();
  succeeded_ = value;
  // @@protoc_insertion_point(field_set:PbRpcInternalTxSliceReadKeysResult.Succeeded)
}

// repeated bytes Value = 2;
inline int PbRpcInternalTxSliceReadKeysResult::value_size() const {
  return value_.size();
}
inline void PbRpcInternalTxSliceReadKeysResult::clear_value() {
  value_.Clear();
}
inline const ::std::string& PbRpcInternalTxSliceReadKeysResult::value(int index) const {
  // @@protoc_insertion_point(field_get:PbRpcInternalTxSliceReadKeysResult.Value)
  return value_.Get(index);
}
inline ::std::string* PbRpcInternalTxSliceReadKeysResult::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:PbRpcInternalTxSliceReadKeysResult.Value)
  return value_.Mutable(index);
}
inline void PbRpcInternalTxSliceReadKeysResult::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PbRpcInternalTxSliceReadKeysResult.Value)
  value_.Mutable(index)->assign(value);
}
inline void PbRpcInternalTxSliceReadKeysResult::set_value(int index, const char* value) {
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PbRpcInternalTxSliceReadKeysResult.Value)
}
inline void PbRpcInternalTxSliceReadKeysResult::set_value(int index, const void* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PbRpcInternalTxSliceReadKeysResult.Value)
}
inline ::std::string* PbRpcInternalTxSliceReadKeysResult::add_value() {
  return value_.Add();
}
inline void PbRpcInternalTxSliceReadKeysResult::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PbRpcInternalTxSliceReadKeysResult.Value)
}
inline void PbRpcInternalTxSliceReadKeysResult::add_value(const char* value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PbRpcInternalTxSliceReadKeysResult.Value)
}
inline void PbRpcInternalTxSliceReadKeysResult::add_value(const void* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PbRpcInternalTxSliceReadKeysResult.Value)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PbRpcInternalTxSliceReadKeysResult::value() const {
  // @@protoc_insertion_point(field_list:PbRpcInternalTxSliceReadKeysResult.Value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PbRpcInternalTxSliceReadKeysResult::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:PbRpcInternalTxSliceReadKeysResult.Value)
  return &value_;
}

// optional int32 SrcPartition = 3;
inline bool PbRpcInternalTxSliceReadKeysResult::has_srcpartition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbRpcInternalTxSliceReadKeysResult::set_has_srcpartition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PbRpcInternalTxSliceReadKeysResult::clear_has_srcpartition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PbRpcInternalTxSliceReadKeysResult::clear_srcpartition() {
  srcpartition_ = 0;
  clear_has_srcpartition();
}
inline ::google::protobuf::int32 PbRpcInternalTxSliceReadKeysResult::srcpartition() const {
  // @@protoc_insertion_point(field_get:PbRpcInternalTxSliceReadKeysResult.SrcPartition)
  return srcpartition_;
}
inline void PbRpcInternalTxSliceReadKeysResult::set_srcpartition(::google::protobuf::int32 value) {
  set_has_srcpartition();
  srcpartition_ = value;
  // @@protoc_insertion_point(field_set:PbRpcInternalTxSliceReadKeysResult.SrcPartition)
}

// optional int32 SrcDataCenter = 4;
inline bool PbRpcInternalTxSliceReadKeysResult::has_srcdatacenter() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PbRpcInternalTxSliceReadKeysResult::set_has_srcdatacenter() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PbRpcInternalTxSliceReadKeysResult::clear_has_srcdatacenter() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PbRpcInternalTxSliceReadKeysResult::clear_srcdatacenter() {
  srcdatacenter_ = 0;
  clear_has_srcdatacenter();
}
inline ::google::protobuf::int32 PbRpcInternalTxSliceReadKeysResult::srcdatacenter() const {
  // @@protoc_insertion_point(field_get:PbRpcInternalTxSliceReadKeysResult.SrcDataCenter)
  return srcdatacenter_;
}
inline void PbRpcInternalTxSliceReadKeysResult::set_srcdatacenter(::google::protobuf::int32 value) {
  set_has_srcdatacenter();
  srcdatacenter_ = value;
  // @@protoc_insertion_point(field_set:PbRpcInternalTxSliceReadKeysResult.SrcDataCenter)
}

// optional int64 id = 5;
inline bool PbRpcInternalTxSliceReadKeysResult::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PbRpcInternalTxSliceReadKeysResult::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PbRpcInternalTxSliceReadKeysResult::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PbRpcInternalTxSliceReadKeysResult::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PbRpcInternalTxSliceReadKeysResult::id() const {
  // @@protoc_insertion_point(field_get:PbRpcInternalTxSliceReadKeysResult.id)
  return id_;
}
inline void PbRpcInternalTxSliceReadKeysResult::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PbRpcInternalTxSliceReadKeysResult.id)
}

// optional double waitedXact = 6;
inline bool PbRpcInternalTxSliceReadKeysResult::has_waitedxact() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PbRpcInternalTxSliceReadKeysResult::set_has_waitedxact() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PbRpcInternalTxSliceReadKeysResult::clear_has_waitedxact() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PbRpcInternalTxSliceReadKeysResult::clear_waitedxact() {
  waitedxact_ = 0;
  clear_has_waitedxact();
}
inline double PbRpcInternalTxSliceReadKeysResult::waitedxact() const {
  // @@protoc_insertion_point(field_get:PbRpcInternalTxSliceReadKeysResult.waitedXact)
  return waitedxact_;
}
inline void PbRpcInternalTxSliceReadKeysResult::set_waitedxact(double value) {
  set_has_waitedxact();
  waitedxact_ = value;
  // @@protoc_insertion_point(field_set:PbRpcInternalTxSliceReadKeysResult.waitedXact)
}

// -------------------------------------------------------------------

// PbRpcPrepareRequestArg

// required int64 id = 1;
inline bool PbRpcPrepareRequestArg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcPrepareRequestArg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcPrepareRequestArg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcPrepareRequestArg::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PbRpcPrepareRequestArg::id() const {
  // @@protoc_insertion_point(field_get:PbRpcPrepareRequestArg.id)
  return id_;
}
inline void PbRpcPrepareRequestArg::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PbRpcPrepareRequestArg.id)
}

// optional .PbPhysicalTimeSpec UST = 2;
inline bool PbRpcPrepareRequestArg::has_ust() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbRpcPrepareRequestArg::set_has_ust() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbRpcPrepareRequestArg::clear_has_ust() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbRpcPrepareRequestArg::clear_ust() {
  if (ust_ != NULL) ust_->::PbPhysicalTimeSpec::Clear();
  clear_has_ust();
}
inline const ::PbPhysicalTimeSpec& PbRpcPrepareRequestArg::ust() const {
  // @@protoc_insertion_point(field_get:PbRpcPrepareRequestArg.UST)
  return ust_ != NULL ? *ust_ : *default_instance_->ust_;
}
inline ::PbPhysicalTimeSpec* PbRpcPrepareRequestArg::mutable_ust() {
  set_has_ust();
  if (ust_ == NULL) ust_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcPrepareRequestArg.UST)
  return ust_;
}
inline ::PbPhysicalTimeSpec* PbRpcPrepareRequestArg::release_ust() {
  clear_has_ust();
  ::PbPhysicalTimeSpec* temp = ust_;
  ust_ = NULL;
  return temp;
}
inline void PbRpcPrepareRequestArg::set_allocated_ust(::PbPhysicalTimeSpec* ust) {
  delete ust_;
  ust_ = ust;
  if (ust) {
    set_has_ust();
  } else {
    clear_has_ust();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcPrepareRequestArg.UST)
}

// required .PbPhysicalTimeSpec HT = 3;
inline bool PbRpcPrepareRequestArg::has_ht() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbRpcPrepareRequestArg::set_has_ht() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PbRpcPrepareRequestArg::clear_has_ht() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PbRpcPrepareRequestArg::clear_ht() {
  if (ht_ != NULL) ht_->::PbPhysicalTimeSpec::Clear();
  clear_has_ht();
}
inline const ::PbPhysicalTimeSpec& PbRpcPrepareRequestArg::ht() const {
  // @@protoc_insertion_point(field_get:PbRpcPrepareRequestArg.HT)
  return ht_ != NULL ? *ht_ : *default_instance_->ht_;
}
inline ::PbPhysicalTimeSpec* PbRpcPrepareRequestArg::mutable_ht() {
  set_has_ht();
  if (ht_ == NULL) ht_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcPrepareRequestArg.HT)
  return ht_;
}
inline ::PbPhysicalTimeSpec* PbRpcPrepareRequestArg::release_ht() {
  clear_has_ht();
  ::PbPhysicalTimeSpec* temp = ht_;
  ht_ = NULL;
  return temp;
}
inline void PbRpcPrepareRequestArg::set_allocated_ht(::PbPhysicalTimeSpec* ht) {
  delete ht_;
  ht_ = ht;
  if (ht) {
    set_has_ht();
  } else {
    clear_has_ht();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcPrepareRequestArg.HT)
}

// repeated bytes Key = 4;
inline int PbRpcPrepareRequestArg::key_size() const {
  return key_.size();
}
inline void PbRpcPrepareRequestArg::clear_key() {
  key_.Clear();
}
inline const ::std::string& PbRpcPrepareRequestArg::key(int index) const {
  // @@protoc_insertion_point(field_get:PbRpcPrepareRequestArg.Key)
  return key_.Get(index);
}
inline ::std::string* PbRpcPrepareRequestArg::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:PbRpcPrepareRequestArg.Key)
  return key_.Mutable(index);
}
inline void PbRpcPrepareRequestArg::set_key(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PbRpcPrepareRequestArg.Key)
  key_.Mutable(index)->assign(value);
}
inline void PbRpcPrepareRequestArg::set_key(int index, const char* value) {
  key_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PbRpcPrepareRequestArg.Key)
}
inline void PbRpcPrepareRequestArg::set_key(int index, const void* value, size_t size) {
  key_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PbRpcPrepareRequestArg.Key)
}
inline ::std::string* PbRpcPrepareRequestArg::add_key() {
  return key_.Add();
}
inline void PbRpcPrepareRequestArg::add_key(const ::std::string& value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PbRpcPrepareRequestArg.Key)
}
inline void PbRpcPrepareRequestArg::add_key(const char* value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PbRpcPrepareRequestArg.Key)
}
inline void PbRpcPrepareRequestArg::add_key(const void* value, size_t size) {
  key_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PbRpcPrepareRequestArg.Key)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PbRpcPrepareRequestArg::key() const {
  // @@protoc_insertion_point(field_list:PbRpcPrepareRequestArg.Key)
  return key_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PbRpcPrepareRequestArg::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:PbRpcPrepareRequestArg.Key)
  return &key_;
}

// repeated bytes Value = 5;
inline int PbRpcPrepareRequestArg::value_size() const {
  return value_.size();
}
inline void PbRpcPrepareRequestArg::clear_value() {
  value_.Clear();
}
inline const ::std::string& PbRpcPrepareRequestArg::value(int index) const {
  // @@protoc_insertion_point(field_get:PbRpcPrepareRequestArg.Value)
  return value_.Get(index);
}
inline ::std::string* PbRpcPrepareRequestArg::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:PbRpcPrepareRequestArg.Value)
  return value_.Mutable(index);
}
inline void PbRpcPrepareRequestArg::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PbRpcPrepareRequestArg.Value)
  value_.Mutable(index)->assign(value);
}
inline void PbRpcPrepareRequestArg::set_value(int index, const char* value) {
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PbRpcPrepareRequestArg.Value)
}
inline void PbRpcPrepareRequestArg::set_value(int index, const void* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PbRpcPrepareRequestArg.Value)
}
inline ::std::string* PbRpcPrepareRequestArg::add_value() {
  return value_.Add();
}
inline void PbRpcPrepareRequestArg::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PbRpcPrepareRequestArg.Value)
}
inline void PbRpcPrepareRequestArg::add_value(const char* value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PbRpcPrepareRequestArg.Value)
}
inline void PbRpcPrepareRequestArg::add_value(const void* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PbRpcPrepareRequestArg.Value)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PbRpcPrepareRequestArg::value() const {
  // @@protoc_insertion_point(field_list:PbRpcPrepareRequestArg.Value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PbRpcPrepareRequestArg::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:PbRpcPrepareRequestArg.Value)
  return &value_;
}

// required int64 SrcPartition = 6;
inline bool PbRpcPrepareRequestArg::has_srcpartition() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PbRpcPrepareRequestArg::set_has_srcpartition() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PbRpcPrepareRequestArg::clear_has_srcpartition() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PbRpcPrepareRequestArg::clear_srcpartition() {
  srcpartition_ = GOOGLE_LONGLONG(0);
  clear_has_srcpartition();
}
inline ::google::protobuf::int64 PbRpcPrepareRequestArg::srcpartition() const {
  // @@protoc_insertion_point(field_get:PbRpcPrepareRequestArg.SrcPartition)
  return srcpartition_;
}
inline void PbRpcPrepareRequestArg::set_srcpartition(::google::protobuf::int64 value) {
  set_has_srcpartition();
  srcpartition_ = value;
  // @@protoc_insertion_point(field_set:PbRpcPrepareRequestArg.SrcPartition)
}

// required int64 SrcDataCenter = 7;
inline bool PbRpcPrepareRequestArg::has_srcdatacenter() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PbRpcPrepareRequestArg::set_has_srcdatacenter() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PbRpcPrepareRequestArg::clear_has_srcdatacenter() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PbRpcPrepareRequestArg::clear_srcdatacenter() {
  srcdatacenter_ = GOOGLE_LONGLONG(0);
  clear_has_srcdatacenter();
}
inline ::google::protobuf::int64 PbRpcPrepareRequestArg::srcdatacenter() const {
  // @@protoc_insertion_point(field_get:PbRpcPrepareRequestArg.SrcDataCenter)
  return srcdatacenter_;
}
inline void PbRpcPrepareRequestArg::set_srcdatacenter(::google::protobuf::int64 value) {
  set_has_srcdatacenter();
  srcdatacenter_ = value;
  // @@protoc_insertion_point(field_set:PbRpcPrepareRequestArg.SrcDataCenter)
}

// -------------------------------------------------------------------

// PbRpcPrepareRequestResult

// required int64 id = 1;
inline bool PbRpcPrepareRequestResult::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcPrepareRequestResult::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcPrepareRequestResult::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcPrepareRequestResult::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PbRpcPrepareRequestResult::id() const {
  // @@protoc_insertion_point(field_get:PbRpcPrepareRequestResult.id)
  return id_;
}
inline void PbRpcPrepareRequestResult::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PbRpcPrepareRequestResult.id)
}

// required .PbPhysicalTimeSpec PT = 2;
inline bool PbRpcPrepareRequestResult::has_pt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbRpcPrepareRequestResult::set_has_pt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbRpcPrepareRequestResult::clear_has_pt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbRpcPrepareRequestResult::clear_pt() {
  if (pt_ != NULL) pt_->::PbPhysicalTimeSpec::Clear();
  clear_has_pt();
}
inline const ::PbPhysicalTimeSpec& PbRpcPrepareRequestResult::pt() const {
  // @@protoc_insertion_point(field_get:PbRpcPrepareRequestResult.PT)
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::PbPhysicalTimeSpec* PbRpcPrepareRequestResult::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcPrepareRequestResult.PT)
  return pt_;
}
inline ::PbPhysicalTimeSpec* PbRpcPrepareRequestResult::release_pt() {
  clear_has_pt();
  ::PbPhysicalTimeSpec* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void PbRpcPrepareRequestResult::set_allocated_pt(::PbPhysicalTimeSpec* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcPrepareRequestResult.PT)
}

// required int64 srcPartition = 3;
inline bool PbRpcPrepareRequestResult::has_srcpartition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbRpcPrepareRequestResult::set_has_srcpartition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PbRpcPrepareRequestResult::clear_has_srcpartition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PbRpcPrepareRequestResult::clear_srcpartition() {
  srcpartition_ = GOOGLE_LONGLONG(0);
  clear_has_srcpartition();
}
inline ::google::protobuf::int64 PbRpcPrepareRequestResult::srcpartition() const {
  // @@protoc_insertion_point(field_get:PbRpcPrepareRequestResult.srcPartition)
  return srcpartition_;
}
inline void PbRpcPrepareRequestResult::set_srcpartition(::google::protobuf::int64 value) {
  set_has_srcpartition();
  srcpartition_ = value;
  // @@protoc_insertion_point(field_set:PbRpcPrepareRequestResult.srcPartition)
}

// required int64 srcDataCenter = 4;
inline bool PbRpcPrepareRequestResult::has_srcdatacenter() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PbRpcPrepareRequestResult::set_has_srcdatacenter() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PbRpcPrepareRequestResult::clear_has_srcdatacenter() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PbRpcPrepareRequestResult::clear_srcdatacenter() {
  srcdatacenter_ = GOOGLE_LONGLONG(0);
  clear_has_srcdatacenter();
}
inline ::google::protobuf::int64 PbRpcPrepareRequestResult::srcdatacenter() const {
  // @@protoc_insertion_point(field_get:PbRpcPrepareRequestResult.srcDataCenter)
  return srcdatacenter_;
}
inline void PbRpcPrepareRequestResult::set_srcdatacenter(::google::protobuf::int64 value) {
  set_has_srcdatacenter();
  srcdatacenter_ = value;
  // @@protoc_insertion_point(field_set:PbRpcPrepareRequestResult.srcDataCenter)
}

// optional double blockDuration = 5;
inline bool PbRpcPrepareRequestResult::has_blockduration() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PbRpcPrepareRequestResult::set_has_blockduration() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PbRpcPrepareRequestResult::clear_has_blockduration() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PbRpcPrepareRequestResult::clear_blockduration() {
  blockduration_ = 0;
  clear_has_blockduration();
}
inline double PbRpcPrepareRequestResult::blockduration() const {
  // @@protoc_insertion_point(field_get:PbRpcPrepareRequestResult.blockDuration)
  return blockduration_;
}
inline void PbRpcPrepareRequestResult::set_blockduration(double value) {
  set_has_blockduration();
  blockduration_ = value;
  // @@protoc_insertion_point(field_set:PbRpcPrepareRequestResult.blockDuration)
}

// -------------------------------------------------------------------

// PbRpcInternalPrepareReplyResult

// required int64 id = 1;
inline bool PbRpcInternalPrepareReplyResult::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcInternalPrepareReplyResult::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcInternalPrepareReplyResult::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcInternalPrepareReplyResult::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PbRpcInternalPrepareReplyResult::id() const {
  // @@protoc_insertion_point(field_get:PbRpcInternalPrepareReplyResult.id)
  return id_;
}
inline void PbRpcInternalPrepareReplyResult::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PbRpcInternalPrepareReplyResult.id)
}

// required .PbPhysicalTimeSpec PT = 2;
inline bool PbRpcInternalPrepareReplyResult::has_pt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbRpcInternalPrepareReplyResult::set_has_pt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbRpcInternalPrepareReplyResult::clear_has_pt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbRpcInternalPrepareReplyResult::clear_pt() {
  if (pt_ != NULL) pt_->::PbPhysicalTimeSpec::Clear();
  clear_has_pt();
}
inline const ::PbPhysicalTimeSpec& PbRpcInternalPrepareReplyResult::pt() const {
  // @@protoc_insertion_point(field_get:PbRpcInternalPrepareReplyResult.PT)
  return pt_ != NULL ? *pt_ : *default_instance_->pt_;
}
inline ::PbPhysicalTimeSpec* PbRpcInternalPrepareReplyResult::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) pt_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcInternalPrepareReplyResult.PT)
  return pt_;
}
inline ::PbPhysicalTimeSpec* PbRpcInternalPrepareReplyResult::release_pt() {
  clear_has_pt();
  ::PbPhysicalTimeSpec* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void PbRpcInternalPrepareReplyResult::set_allocated_pt(::PbPhysicalTimeSpec* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcInternalPrepareReplyResult.PT)
}

// required int64 srcPartition = 3;
inline bool PbRpcInternalPrepareReplyResult::has_srcpartition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbRpcInternalPrepareReplyResult::set_has_srcpartition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PbRpcInternalPrepareReplyResult::clear_has_srcpartition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PbRpcInternalPrepareReplyResult::clear_srcpartition() {
  srcpartition_ = GOOGLE_LONGLONG(0);
  clear_has_srcpartition();
}
inline ::google::protobuf::int64 PbRpcInternalPrepareReplyResult::srcpartition() const {
  // @@protoc_insertion_point(field_get:PbRpcInternalPrepareReplyResult.srcPartition)
  return srcpartition_;
}
inline void PbRpcInternalPrepareReplyResult::set_srcpartition(::google::protobuf::int64 value) {
  set_has_srcpartition();
  srcpartition_ = value;
  // @@protoc_insertion_point(field_set:PbRpcInternalPrepareReplyResult.srcPartition)
}

// required int64 srcDataCenter = 4;
inline bool PbRpcInternalPrepareReplyResult::has_srcdatacenter() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PbRpcInternalPrepareReplyResult::set_has_srcdatacenter() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PbRpcInternalPrepareReplyResult::clear_has_srcdatacenter() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PbRpcInternalPrepareReplyResult::clear_srcdatacenter() {
  srcdatacenter_ = GOOGLE_LONGLONG(0);
  clear_has_srcdatacenter();
}
inline ::google::protobuf::int64 PbRpcInternalPrepareReplyResult::srcdatacenter() const {
  // @@protoc_insertion_point(field_get:PbRpcInternalPrepareReplyResult.srcDataCenter)
  return srcdatacenter_;
}
inline void PbRpcInternalPrepareReplyResult::set_srcdatacenter(::google::protobuf::int64 value) {
  set_has_srcdatacenter();
  srcdatacenter_ = value;
  // @@protoc_insertion_point(field_set:PbRpcInternalPrepareReplyResult.srcDataCenter)
}

// optional double blockDuration = 5;
inline bool PbRpcInternalPrepareReplyResult::has_blockduration() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PbRpcInternalPrepareReplyResult::set_has_blockduration() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PbRpcInternalPrepareReplyResult::clear_has_blockduration() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PbRpcInternalPrepareReplyResult::clear_blockduration() {
  blockduration_ = 0;
  clear_has_blockduration();
}
inline double PbRpcInternalPrepareReplyResult::blockduration() const {
  // @@protoc_insertion_point(field_get:PbRpcInternalPrepareReplyResult.blockDuration)
  return blockduration_;
}
inline void PbRpcInternalPrepareReplyResult::set_blockduration(double value) {
  set_has_blockduration();
  blockduration_ = value;
  // @@protoc_insertion_point(field_set:PbRpcInternalPrepareReplyResult.blockDuration)
}

// -------------------------------------------------------------------

// PbRpcGST

// required .PbPhysicalTimeSpec GST = 1;
inline bool PbRpcGST::has_gst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcGST::set_has_gst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcGST::clear_has_gst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcGST::clear_gst() {
  if (gst_ != NULL) gst_->::PbPhysicalTimeSpec::Clear();
  clear_has_gst();
}
inline const ::PbPhysicalTimeSpec& PbRpcGST::gst() const {
  // @@protoc_insertion_point(field_get:PbRpcGST.GST)
  return gst_ != NULL ? *gst_ : *default_instance_->gst_;
}
inline ::PbPhysicalTimeSpec* PbRpcGST::mutable_gst() {
  set_has_gst();
  if (gst_ == NULL) gst_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcGST.GST)
  return gst_;
}
inline ::PbPhysicalTimeSpec* PbRpcGST::release_gst() {
  clear_has_gst();
  ::PbPhysicalTimeSpec* temp = gst_;
  gst_ = NULL;
  return temp;
}
inline void PbRpcGST::set_allocated_gst(::PbPhysicalTimeSpec* gst) {
  delete gst_;
  gst_ = gst;
  if (gst) {
    set_has_gst();
  } else {
    clear_has_gst();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcGST.GST)
}

// -------------------------------------------------------------------

// PbRpcLST

// required int32 Round = 1;
inline bool PbRpcLST::has_round() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcLST::set_has_round() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcLST::clear_has_round() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcLST::clear_round() {
  round_ = 0;
  clear_has_round();
}
inline ::google::protobuf::int32 PbRpcLST::round() const {
  // @@protoc_insertion_point(field_get:PbRpcLST.Round)
  return round_;
}
inline void PbRpcLST::set_round(::google::protobuf::int32 value) {
  set_has_round();
  round_ = value;
  // @@protoc_insertion_point(field_set:PbRpcLST.Round)
}

// required .PbPhysicalTimeSpec LST = 2;
inline bool PbRpcLST::has_lst() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbRpcLST::set_has_lst() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbRpcLST::clear_has_lst() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbRpcLST::clear_lst() {
  if (lst_ != NULL) lst_->::PbPhysicalTimeSpec::Clear();
  clear_has_lst();
}
inline const ::PbPhysicalTimeSpec& PbRpcLST::lst() const {
  // @@protoc_insertion_point(field_get:PbRpcLST.LST)
  return lst_ != NULL ? *lst_ : *default_instance_->lst_;
}
inline ::PbPhysicalTimeSpec* PbRpcLST::mutable_lst() {
  set_has_lst();
  if (lst_ == NULL) lst_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcLST.LST)
  return lst_;
}
inline ::PbPhysicalTimeSpec* PbRpcLST::release_lst() {
  clear_has_lst();
  ::PbPhysicalTimeSpec* temp = lst_;
  lst_ = NULL;
  return temp;
}
inline void PbRpcLST::set_allocated_lst(::PbPhysicalTimeSpec* lst) {
  delete lst_;
  lst_ = lst;
  if (lst) {
    set_has_lst();
  } else {
    clear_has_lst();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcLST.LST)
}

// -------------------------------------------------------------------

// PbRpcGSTandUST

// required .PbPhysicalTimeSpec GST = 1;
inline bool PbRpcGSTandUST::has_gst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbRpcGSTandUST::set_has_gst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbRpcGSTandUST::clear_has_gst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbRpcGSTandUST::clear_gst() {
  if (gst_ != NULL) gst_->::PbPhysicalTimeSpec::Clear();
  clear_has_gst();
}
inline const ::PbPhysicalTimeSpec& PbRpcGSTandUST::gst() const {
  // @@protoc_insertion_point(field_get:PbRpcGSTandUST.GST)
  return gst_ != NULL ? *gst_ : *default_instance_->gst_;
}
inline ::PbPhysicalTimeSpec* PbRpcGSTandUST::mutable_gst() {
  set_has_gst();
  if (gst_ == NULL) gst_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcGSTandUST.GST)
  return gst_;
}
inline ::PbPhysicalTimeSpec* PbRpcGSTandUST::release_gst() {
  clear_has_gst();
  ::PbPhysicalTimeSpec* temp = gst_;
  gst_ = NULL;
  return temp;
}
inline void PbRpcGSTandUST::set_allocated_gst(::PbPhysicalTimeSpec* gst) {
  delete gst_;
  gst_ = gst;
  if (gst) {
    set_has_gst();
  } else {
    clear_has_gst();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcGSTandUST.GST)
}

// required .PbPhysicalTimeSpec UST = 2;
inline bool PbRpcGSTandUST::has_ust() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbRpcGSTandUST::set_has_ust() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbRpcGSTandUST::clear_has_ust() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbRpcGSTandUST::clear_ust() {
  if (ust_ != NULL) ust_->::PbPhysicalTimeSpec::Clear();
  clear_has_ust();
}
inline const ::PbPhysicalTimeSpec& PbRpcGSTandUST::ust() const {
  // @@protoc_insertion_point(field_get:PbRpcGSTandUST.UST)
  return ust_ != NULL ? *ust_ : *default_instance_->ust_;
}
inline ::PbPhysicalTimeSpec* PbRpcGSTandUST::mutable_ust() {
  set_has_ust();
  if (ust_ == NULL) ust_ = new ::PbPhysicalTimeSpec;
  // @@protoc_insertion_point(field_mutable:PbRpcGSTandUST.UST)
  return ust_;
}
inline ::PbPhysicalTimeSpec* PbRpcGSTandUST::release_ust() {
  clear_has_ust();
  ::PbPhysicalTimeSpec* temp = ust_;
  ust_ = NULL;
  return temp;
}
inline void PbRpcGSTandUST::set_allocated_ust(::PbPhysicalTimeSpec* ust) {
  delete ust_;
  ust_ = ust;
  if (ust) {
    set_has_ust();
  } else {
    clear_has_ust();
  }
  // @@protoc_insertion_point(field_set_allocated:PbRpcGSTandUST.UST)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tx_5fmessages_2eproto__INCLUDED
